syntax = "proto3";

package fogpb;
option go_package = "./;fogpb";

enum SensorType {
    UNKNOWN = 0;
    VELOCITY = 1;
    GYROSCOPE = 2;
}

message SensorData {
    string sensor_id = 1;
    SensorType type = 2;
    string value = 3;
    string timestamp = 4;
}

message StreamDataRequest {
    int32 id = 1;
}

message StreamDataResponse {
    SensorData data = 1;
}

// SensorService runs on the edge device and
// streams sensor data to the EdgeService.
service SensorService {
    // StreamData will be called by the EdgeService
    // to initiate a stream of sensor data.
    rpc StreamData(StreamDataRequest) returns (stream StreamDataResponse);
}

message Position {
    double x = 1;
    double y = 2;
    double z = 3;
}

message ProcessDataRequest {
    SensorData data = 1;
}

message UpdatePositionResponse {
    Position position = 1;
}

// EdgeService runs on the edge device and
// receives sensor data from the SensorService.
service EdgeService {
    // Removed the ProcessDataStream RPC from EdgeService
}

// CloudService runs on the cloud and processes
// aggregated sensor data.
service CloudService {
    // Bidirectional streaming endpoint for processing data
    // and sending back position updates to the EdgeService.
    rpc ProcessDataStream(stream ProcessDataRequest) returns (stream UpdatePositionResponse);
}
